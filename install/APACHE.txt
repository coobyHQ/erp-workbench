in /etc/apache2/mods-enabled/security2.conf
set:
    <Directory />
        Options None
        AllowOverride None
        Order Deny,Allow
        Deny from all
    </Directory>
    ServerTokens Prod
    ServerSignature Off
    TraceEnable Off
    <DirectoryMatch "/(\.svn|\.git)">
        Deny from all
        Satisfy all
    </DirectoryMatch>


ModSecurity:
------------
    Enable headers module:
        sudo a2enmod headers

    Install Apache 2 ModSecurity Rules:
        apt-get install -y libapache2-modsecurity modsecurity-crs


    Include ModSecurity rules:
        edit /etc/modsecurity/rules.conf:

            <IfModule security2_module>
                 Include "/usr/share/modsecurity-crs/*.conf"
                 Include "/usr/share/modsecurity-crs/activated_rules/*.conf"
            </IfModule>

    Enable Secure Rules Engine:
            edit /etc/modsecurity/modsecurity.conf-recommended

                # SecRuleEngine DetectionOnly
                SecRuleEngine On

    Enable all base and optional rules:
        cd /usr/share/modsecurity-crs
        for f in `ls --color=never base_rules/ | grep modsecurity`; do sudo ln -s /usr/share/modsecurity-crs/base_rules/$f activated_rules/$f; done
        for f in `ls --color=never optional_rules/ | grep modsecurity`; do sudo ln -s /usr/share/modsecurity-crs/optional_rules/$f activated_rules/$f; done


HTTP Proxy:
-----------
    Enable HTTP Proxy module:
        a2enmod proxy_http

    Protect configuration files:
        Only Root (and Root group) can access configuration files
            sudo chown -R root:root /etc/apache2
            sudo chmod -R o-rwx /etc/apache2



default virtual host:
---------------------
<VirtualHost *:80>
    ServerAdmin webmaster@example.com
    ServerName odoo.example.com

    <IfModule mod_rewrite.c>
        RewriteEngine On

        # Permanent redirect (301 HTTP) if no canonical domain name
        RewriteCond %{HTTP_HOST} !^odoo.example.com
        RewriteRule ^/(.*)$ http://odoo.example.com/$1 [R=301,NE,L]

        # Redirect 301 to HTTPS
        RewriteCond %{HTTPS} !=on
        RewriteRule ^/?(.*) https://%{SERVER_NAME}/$1 [R=301,NE,L]
    </IfModule>

    <Location "/" >
        Order deny,allow
        Deny from all
        Allow from all
    </Location>

    ErrorLog /var/log/apache2/odoo.example.com.error.log
    LogLevel warn
    CustomLog /var/log/apache2/odoo.example.com.access.log combined

</VirtualHost>
<IfModule mod_ssl.c>
    <VirtualHost *:443>
        ServerAdmin webmaster@example.com
        ServerName odoo.example.com

        SSLEngine on
        SSLProtocol           all -SSLv2 -SSLv3
        SSLCipherSuite        ALL:!ADH:!EXPORT:!SSLv2:RC4+RSA:+HIGH:+MEDIUM
        SSLCertificateFile    /etc/ssl/wildcard.example.com/public.crt
        SSLCertificateKeyFile /etc/ssl/wildcard.example.com/private.pem

        RequestHeader set X-Forwarded-Proto "https"

        <IfModule mod_rewrite.c>
            RewriteEngine On

            # Permanent redirect (301 HTTP) if no canonical domain name
            RewriteCond %{HTTP_HOST} !^odoo.example.com
            RewriteRule ^/(.*)$ https://odoo.example.com/$1 [R=301,NE,L]
        </IfModule>

        <Location "/" >
            Order deny,allow
            Deny from all
            Allow from all
        </Location>

        <Location "/web/database/manager" >
            Order deny,allow
            Deny from all
            Allow from 192.168.122.0/24 127.0.0.0/255.0.0.0 ::1/128
        </Location>

        <Location "/website/info" >
            Order deny,allow
            Deny from all
            Allow from 192.168.122.0/24 127.0.0.0/255.0.0.0 ::1/128
        </Location>

        # Comment to disable proxy
        ProxyRequests Off
        ProxyPreserveHost On
        ProxyPass /longpolling/        http://localhost:8072/longpolling/ retry=0
        ProxyPassReverse /longpolling/ http://localhost:8072/longpolling/ retry=0
        ProxyPass /                    http://localhost:8069/ retry=0
        ProxyPassReverse /             http://localhost:8069/ retry=0

        ErrorLog /var/log/apache2/odoo.example.com-ssl.error.log
        LogLevel warn
        CustomLog /var/log/apache2/odoo.example.com-ssl.access.log combined

    </VirtualHost>
</IfModule>
